Attribute VB_Name = "Module1"
Sub MacroCheck()
    Dim testMessage As String
    testMessage = "Hello World!"
    MsgBox (testMessage)
End Sub

Sub DQAnalysis()
    Worksheets("DQ Analysis").Activate
    'Activate output worksheet
    
    Range("A1").Value = "DAQO (Ticker:DQ)"
    'Access the first cell in the worksheet and changes the text
    
    'Create a header row
    'Also accesses cells to input; similar to Range function
    Cells(3, 1).Value = "Year"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"

    Worksheets("2018").Activate
    'Access stock data
    
    'Setting Our Variables
    totalVolume = 0
    Dim startingPrice As Double
    'AsDouble is used because prices have decimals
    Dim endingPrice As Double
    
    
    'Finding the number of rows to Loop over
    rowStart = 2
    'DELETE: rowEnd = 3013
    'rowEnd code taken from https://stackoverflow.com/questions/18088729/row-count-where-data-exists
    rowEnd = Cells(Rows.Count, "A").End(xlUp).Row
    '(Another method to find number of rows: RowCount = Cells(Rows.Count, "A").End(xlUp).Row)
    '(Continue previous method and loop over all rows by using: For i = 2 To RowCount)
    'In this method, we set rowStart as 2, and calculated rowEnd using the same RowCount variable formula)
    
    
    For i = rowStart To rowEnd
        'increase totalVolume
        If Cells(i, 1).Value = "DQ" Then
            totalVolume = totalVolume + Cells(i, 8).Value
        End If
        'If the cells in the first column on Sheet "2018" contain "DQ",
        'Increases the totalVolume amount by the value in the current row IF previous condition is met
        
        
        'Steps of finding first closing price of DQ
        '1) Loop through all the rows.
        '2) Check if the current row is the first row of DQ's data.
        '3) If so, set the starting price to the closing price in the current row.
        If Cells(i, 1).Value = "DQ" And Cells(i - 1, 1).Value <> "DQ" Then
            startingPrice = Cells(i, 6).Value
        End If
        'Checks if previous row and current row is DQ data or not
        'This indicates the beginning of the DQ data
        'When condition is true, starting price is stored
        
        If Cells(i, 1).Value = "DQ" And Cells(i + 1, 1).Value <> "DQ" Then
            endingPrice = Cells(i, 6).Value
        End If
        'Checks if current row and next row is DQ data or not
        'This indicates the end of the DQ data
        'When condition is true, ending price is stored
        
        'THIS ONLY WORKS BECAUSE THE DATA IS ORGANIZED BY TICKER IN THE FIRST COLUMN
        
    Next i
    'Closes For Loop
    
    
    Worksheets("DQ Analysis").Activate
    Cells(4, 1).Value = 2018
    'Creates a value indicating the year 2018
    Cells(4, 2).Value = totalVolume
    'Creates a value indicating the total volume, solved above
    Cells(4, 3).Value = endingPrice / startingPrice - 1
    'Creates a value that shows the yearly return for DQ

End Sub
Sub AllStocksAnalysis()
    Dim startTime As Single
    Dim endTime As Single
    
    yearValue = InputBox("What year would you like to run the analysis on?")
    
        startTime = Timer

'1)Format the output sheet on the "All Stocks Analysis" worksheet.
    Worksheets("All Stocks Analysis").Activate
    
    Range("A1").Value = "All Stocks (" + yearValue + ")"
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"

'2)Initialize an array of all tickers.

    Dim tickers(12) As String
    'Creates and array with 12 elements
    tickers(0) = "AY"
    tickers(1) = "CSIQ"
    tickers(2) = "DQ"
    tickers(3) = "ENPH"
    tickers(4) = "FSLR"
    tickers(5) = "HASI"
    tickers(6) = "JKS"
    tickers(7) = "RUN"
    tickers(8) = "SEDG"
    tickers(9) = "SPWR"
    tickers(10) = "TERP"
    tickers(11) = "VSLR"
  
'3a)Initialize variables for the starting price and ending price.
    Dim startingPrice As Single
    Dim endingPrice As Single
    
'3b)Activate the data worksheet.
    Worksheets(yearValue).Activate

'3c)Find the number of rows to loop over.
    RowCount = Cells(Rows.Count, "A").End(xlUp).Row
    
'4)Loop through the tickers.
    For i = 0 To 11
        ticker = tickers(i)
        'Do stuff with ticker
        totalVolume = 0
    
'5)Loop through rows in the data.
    Worksheets(yearValue).Activate
        For j = 2 To RowCount
        
    '5a)Find the total volume for the current ticker.
        If Cells(j, 1).Value = ticker Then
        totalVolume = totalVolume + Cells(j, 8).Value
    End If
    
    '5b)Find the starting price for the current ticker.
        If Cells(j, 1).Value = ticker And Cells(j - 1, 1).Value <> ticker Then
            startingPrice = Cells(j, 6).Value
        End If
        'Determines the beginning of the ticker section
        
    '5c)Find the ending price for the current ticker.
        If Cells(j, 1).Value = ticker And Cells(j + 1, 1).Value <> ticker Then
            endingPrice = Cells(j, 6).Value
        End If
        'Determines the end of the ticker section
        
    Next j
    
'6)Output the data for the current ticker.
    Worksheets("All Stocks Analysis").Activate
    Cells(4 + i, 1).Value = ticker
    Cells(4 + i, 2).Value = totalVolume
    Cells(4 + i, 3).Value = endingPrice / startingPrice - 1
 Next i


Worksheets("All Stocks Analysis").Activate

Range("A3:C3").Font.Bold = True
Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
Range("B4:B15").NumberFormat = "#,##0"
Range("C4:C15").NumberFormat = "0.0%"
Columns("B").AutoFit

'Color Formatting
    dataRowStart = 4
    dataRowEnd = 15
    For i = dataRowStart To dataRowEnd
    
    
    If Cells(i, 3) > 0 Then
        Cells(i, 3).Interior.Color = vbGreen
        'Color the cell green
    ElseIf Cells(i, 3) < 0 Then
        Cells(i, 3).Interior.Color = vbRed
        'Color the cell red
    Else
        Cells(i, 3).Interior.Color = xlNone
        'Clear the cell color
    
    End If
Next i

    endTime = Timer
    MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & (yearValue)

End Sub

Sub ClearWorksheet()

Cells.Clear

End Sub
